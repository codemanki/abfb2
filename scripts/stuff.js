define(
    [],
  function(){
        return {
                 pick:function(arg, def) {
                            return (typeof arg == 'undefined' ? def : arg);
                 },
                 get_type:function(obj){
                         Object.prototype.toString.call(obj).replace(/^\[object (.+)\]$/,"$1").toLowerCase();
                 },
                 tocxsl:"<xsl:stylesheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot; exclude-result-prefixes=&quot;ncx xsl&quot; xmlns:ncx=&quot;http://www.daisy.org/z3986/2005/ncx/&quot; xmlns:epub=&quot;http://www.idpf.org/2007/ops&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;> <xsl:output method=&quot;html&quot; indent=&quot;yes&quot; encoding=&quot;UTF-8&quot;/> <xsl:param name=&quot;contents-str&quot;>Contents</xsl:param> <xsl:template match=&quot;ncx:ncx&quot;> <xsl:call-template name=&quot;html-head&quot;/> <select id=&quot;tocselect&quot;> <xsl:apply-templates/> </select> </xsl:template> <xsl:template match=&quot;ncx:navMap&quot;> <!--h1><xsl:value-of select=&quot;$contents-str&quot;/></h1--> <xsl:apply-templates/> </xsl:template> <xsl:template match=&quot;ncx:navPoint&quot;> <option style=&quot;text-indent:{16*count(ancestor::*)}px&quot;> <xsl:attribute name=&quot;id&quot;> <xsl:value-of select=&quot;@playOrder&quot;/> </xsl:attribute> <xsl:value-of select=&quot;ncx:navLabel&quot;/> </option> <xsl:apply-templates select=&quot;ncx:navPoint&quot;/> </xsl:template> <xsl:template match=&quot;ncx:navLabel| ncx:text&quot;> <xsl:apply-templates/> </xsl:template> <xsl:template match=&quot;ncx:head| ncx:docAuthor| ncx:docTitle&quot;/> <xsl:template match=&quot;ncx:head/text()| ncx:docAuthor/text()| ncx:docTitle/text()| ncx:navLabel/text()&quot;/> <xsl:template match=&quot;*&quot;> <xsl:message terminate=&quot;yes&quot;>ERROR: <xsl:value-of select=&quot;name(.)&quot;/> not matched! </xsl:message> </xsl:template> <xsl:template name=&quot;html-head&quot;> <h1><xsl:apply-templates select=&quot;/ncx:ncx/ncx:docTitle/ncx:text&quot;/></h1> </xsl:template> </xsl:stylesheet>"
                 //"<?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?> <xsl:stylesheet version=&quot;1.0&quot;         exclude-result-prefixes=&quot;ncx xsl&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;         xmlns:ncx=&quot;http://www.daisy.org/z3986/2005/ncx/&quot;         xmlns:epub=&quot;http://www.idpf.org/2007/ops&quot;         xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;>   <!-- Text for the top-level h1 inside the primary nav element -->  <xsl:param name=&quot;contents-str&quot;>Contents</xsl:param>   <xsl:template match=&quot;ncx:ncx&quot;>   <xsl:call-template name=&quot;html-head&quot;/>   <select>    <xsl:apply-templates/>   </select>  </xsl:template>   <xsl:template match=&quot;ncx:navMap&quot;>     <h1><xsl:value-of select=&quot;$contents-str&quot;/></h1>      <xsl:apply-templates/>  </xsl:template>   <xsl:template match=&quot;ncx:navPoint&quot;>   <option>     <xsl:attribute name=&quot;id&quot;>       <xsl:value-of select=&quot;@playOrder&quot;/>     </xsl:attribute>    <!--a>     <xsl:attribute name=&quot;href&quot;>      <xsl:value-of select=&quot;ncx:content[1]/@src&quot;/>     </xsl:attribute-->     <xsl:apply-templates select=&quot;ncx:navLabel|ncx:navPoint&quot;/>    <!--/a-->   </option>  </xsl:template>   <xsl:template match=&quot;ncx:navLabel|             ncx:text&quot;>   <xsl:apply-templates/>  </xsl:template>   <!-- Ignore these elements -->  <xsl:template match=&quot;ncx:head|             ncx:docAuthor|             ncx:docTitle&quot;/>  <!-- Ignore this whitespace -->  <xsl:template match=&quot;ncx:head/text()|             ncx:docAuthor/text()|             ncx:docTitle/text()|             ncx:navLabel/text()&quot;/>   <!-- Default rule to catch omissions -->  <xsl:template match=&quot;*&quot;>   <xsl:message terminate=&quot;yes&quot;>ERROR: <xsl:value-of select=&quot;name(.)&quot;/> not matched!   </xsl:message>  </xsl:template>   <xsl:template name=&quot;html-head&quot;>    <h1><xsl:apply-templates select=&quot;/ncx:ncx/ncx:docTitle/ncx:text&quot;/></h1>  </xsl:template>  </xsl:stylesheet>"
        }
  }
);
